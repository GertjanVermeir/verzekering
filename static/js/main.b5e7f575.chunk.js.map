{"version":3,"sources":["components/Section.jsx","components/Container.jsx","sections/form/FormCar.jsx","sections/form/FormContact.jsx","sections/form/FormFile.jsx","sections/form/InsuranceForm.jsx","sections/main/MainSection.jsx","sections/about/AboutSection.jsx","sections/contact/ContactForm.jsx","sections/contact/ContactSection.jsx","utils/window.js","utils/browser.js","images/logo_white.svg","i18n/i18nSetup.js","components/LanguageToggle.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["Section","children","variant","id","reference","ref","className","Container","FormCar","validationProps","errors","setIsSubmitting","nextStep","t","useTranslation","Row","lg","Form","Group","as","Col","controlId","Label","Control","type","Feedback","carBrand","carType","min","carKilowatt","placeholder","carDriversLicenseDate","value","carHasOmnium","carAccidents","onClick","FormContact","previousStep","href","name","lastName","firstName","xs","birthDate","postalCode","contactType","baseStyle","flex","display","flexDirection","alignItems","textAlign","padding","borderWidth","borderRadius","borderColor","borderStyle","backgroundColor","color","outline","transition","minHeight","activeStyle","acceptStyle","rejectStyle","FormFile","useDropzone","accept","getRootProps","getInputProps","isDragActive","isDragAccept","isDragReject","style","useMemo","contactSchema","object","string","required","carSchema","number","positive","integer","FormBody","touched","handleChange","handleBlur","isSubmitted","console","log","React","cloneElement","onChange","onBlur","isInvalid","FormWrapper","validation","onSubmit","useState","values","validationSchema","initialValues","handleSubmit","autoComplete","e","preventDefault","InsuranceForm","setCarData","setContactData","goToNextStep","stepName","MainSection","toAbout","AboutSection","target","icon","faEuroSign","faLayerGroup","faChartLine","schema","contact","message","rows","ContactForm","setSubmitting","resetForm","ContactSection","IS_IE","RegExp","join","test","window","navigator","userAgent","isMicrosoftBrowser","getRefDomBounding","current","node","ReactDOM","findDOMNode","getBoundingClientRect","undefined","scrollTo","top","offset","pageYOffset","behavior","scrollToRef","nl","require","fr","changeLanguage","language","i18n","then","info","languageDetectorOptions","order","lookupLocalStorage","caches","setupAndInitI18n","i18nOptions","fallbackLng","supportedLngs","detection","resources","translations","interpolation","escapeValue","ns","defaultNS","nsSeparator","react","wait","withRef","defaultTransParent","lng","use","LanguageDetector","initReactI18next","init","LanguageToggle","NavDropdown","title","Item","App","refMain","useRef","refAbout","refForm","refContact","header","setHeader","listenScrollEvent","event","scrollY","useEffect","addEventListener","removeEventListener","Navbar","expand","fixed","Brand","src","Logo","alt","Toggle","Collapse","Nav","Link","Button","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b5e7f575.chunk.js","sourcesContent":["import React from 'react';\n\nimport './Section.scss';\n\nconst Section = ({ children, variant, id, reference }) => (\n  <div id={id} ref={reference} className={`page-section ${variant ? `page-section-${variant}` : '' }`}>\n    { children }\n  </div>\n);\n\nexport default Section;\n","import React from 'react';\nimport BootstrapContainer from 'react-bootstrap/Container';\n\nimport \"./Container.scss\";\n\nconst Container = ({ children }) => (\n  <BootstrapContainer>\n    { children }\n  </BootstrapContainer>\n);\n\nexport default Container;\n","import Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/cjs/Col\";\nimport Form from \"react-bootstrap/Form\";\nimport React from \"react\";\nimport {useTranslation} from \"react-i18next\";\nimport Button from \"react-bootstrap/cjs/Button\";\n\nconst FormCar = ({ validationProps, errors, nextStep, setIsSubmitting }) => {\n  const {t}  = useTranslation();\n  return (\n    <div>\n      <h5>{t('form.car')}</h5>\n      <p>{t('form.fields.carInfo')}</p>\n      <Row className=\"mb-3\">\n        <Col lg=\"12\">\n          <Row className=\"mb-3\">\n            <Form.Group as={Col} controlId=\"carBrand\">\n              <Form.Label>{t('form.fields.carBrand')} *</Form.Label>\n              <Form.Control type=\"text\" {...validationProps('carBrand')} />\n              <Form.Control.Feedback type=\"invalid\">\n                {t(errors.carBrand)}\n              </Form.Control.Feedback>\n            </Form.Group>\n            <Form.Group as={Col} controlId=\"carType\">\n              <Form.Label>{t('form.fields.carType')} *</Form.Label>\n              <Form.Control type=\"text\" {...validationProps('carType')} />\n              <Form.Control.Feedback type=\"invalid\">\n                {t(errors.carType)}\n              </Form.Control.Feedback>\n            </Form.Group>\n          </Row>\n          <Row className=\"mb-3\">\n            <Form.Group as={Col} controlId=\"carKilowatt\">\n              <Form.Label>{t('form.fields.carKilowatt')}</Form.Label>\n              <Form.Control type=\"number\" min=\"0\" {...validationProps('carKilowatt')} />\n              <Form.Control.Feedback type=\"invalid\">\n                {t(errors.carKilowatt)}\n              </Form.Control.Feedback>\n            </Form.Group>\n            <Form.Group as={Col} controlId=\"carDriversLicenseDate\">\n              <Form.Label>{t('form.fields.carDriversLicenseDate')}</Form.Label>\n              <Form.Control placeholder=\"dd/mm/jjjj\" {...validationProps('carDriversLicenseDate')} />\n              <Form.Control.Feedback type=\"invalid\">\n                {t(errors.carDriversLicenseDate)}\n              </Form.Control.Feedback>\n            </Form.Group>\n          </Row>\n          <Row className=\"mb-3\">\n            <Form.Group as={Col} controlId=\"carHasOmnium\">\n              <Form.Label>{t('form.fields.carHasOmnium')}</Form.Label>\n              <Form.Control type=\"select\" as=\"select\" {...validationProps('carHasOmnium')}>\n                <option value=\"\"></option>\n                <option value=\"yes\">{t('form.fields.yes')}</option>\n                <option value=\"no\">{t('form.fields.no')}</option>\n              </Form.Control>\n              <Form.Control.Feedback type=\"invalid\">\n                {t(errors.carHasOmnium)}\n              </Form.Control.Feedback>\n            </Form.Group>\n            <Form.Group as={Col} controlId=\"carAccidents\">\n              <Form.Label>{t('form.fields.carAccidents')} *</Form.Label>\n              <Form.Control type=\"number\" min=\"0\" {...validationProps('carAccidents')} />\n              <Form.Control.Feedback type=\"invalid\">\n                {t(errors.carAccidents)}\n              </Form.Control.Feedback>\n            </Form.Group>\n          </Row>\n        </Col>\n      </Row>\n      <div className=\"wizard-btn-row-single\">\n        <Button variant=\"primary\" type=\"submit\" onClick={() => setIsSubmitting(true)}>\n          {t('wizard.next')}\n        </Button>\n      </div>\n    </div>\n  )\n}\n\nexport default FormCar;\n","import Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/cjs/Col\";\nimport Form from \"react-bootstrap/Form\";\nimport React from \"react\";\nimport {useTranslation} from \"react-i18next\";\nimport Button from \"react-bootstrap/cjs/Button\";\n\nconst FormContact = ({ validationProps, errors = {}, previousStep }) => {\n  const {t}  = useTranslation();\n  return (\n    <div>\n      <h5>{t('form.contact')}</h5>\n      <p>\n        {t('form.fields.contactInfo')}<br />\n        {t('form.fields.contactPrivacy')} <a className=\"privacy\" href=\"#\">{t('form.fields.contactLink')}</a>\n      </p>\n      <Row className=\"mb-3\">\n        <Col lg=\"12\">\n          <Row className=\"mb-3\">\n            <Form.Group as={Col} controlId=\"lastName\">\n              <Form.Label>{t('form.fields.lastName')} *</Form.Label>\n              <Form.Control name=\"lastName\" type=\"text\" {...validationProps('lastName')} />\n              <Form.Control.Feedback type=\"invalid\">\n                {t(errors.lastName)}\n              </Form.Control.Feedback>\n            </Form.Group>\n            <Form.Group as={Col} controlId=\"firstName\">\n              <Form.Label>{t('form.fields.firstName')} *</Form.Label>\n              <Form.Control name=\"firstName\" type=\"text\" {...validationProps('firstName')} />\n              <Form.Control.Feedback type=\"invalid\">\n                {t(errors.firstName)}\n              </Form.Control.Feedback>\n            </Form.Group>\n          </Row>\n          <Row>\n            <Form.Group as={Col} xs=\"3\" controlId=\"birthDate\">\n              <Form.Label>{t('form.fields.birthDate')} *</Form.Label>\n              <Form.Control placeholder=\"jjjj\" {...validationProps('birthDate')} />\n              <Form.Control.Feedback type=\"invalid\">\n                {t(errors.birthDate)}\n              </Form.Control.Feedback>\n            </Form.Group>\n            <Form.Group as={Col} xs=\"3\" controlId=\"postalCode\">\n              <Form.Label>{t('form.fields.postalCode')} *</Form.Label>\n              <Form.Control type=\"text\" {...validationProps('postalCode')} />\n              <Form.Control.Feedback type=\"invalid\">\n                {t(errors.postalCode)}\n              </Form.Control.Feedback>\n            </Form.Group>\n            <Form.Group as={Col} xs=\"6\" controlId=\"contactType\">\n              <Form.Label>{t('form.fields.contactType')} *</Form.Label>\n              <Form.Control type=\"text\"{...validationProps('contactType')} />\n              <Form.Control.Feedback type=\"invalid\">\n                {t(errors.contactType)}\n              </Form.Control.Feedback>\n            </Form.Group>\n          </Row>\n        </Col>\n      </Row>\n      <div className=\"wizard-btn-row\">\n        <Button variant=\"primary\" type=\"button\" onClick={previousStep}>\n          {t('wizard.previous')}\n        </Button>\n        <Button variant=\"primary\" type=\"submit\">\n          {t('form.mainAction')}\n        </Button>\n      </div>\n    </div>\n  )\n}\n\nexport default FormContact;\n","import React, {useMemo} from \"react\";\nimport {useTranslation} from \"react-i18next\";\nimport {useDropzone} from \"react-dropzone\";\nimport Button from \"react-bootstrap/cjs/Button\";\n\n\nconst baseStyle = {\n  flex: 1,\n  display: 'flex',\n  flexDirection: 'column',\n  alignItems: 'center',\n  textAlign: 'center',\n  padding: '20px',\n  borderWidth: 2,\n  borderRadius: 2,\n  borderColor: '#DDD',\n  borderStyle: 'dashed',\n  backgroundColor: '#FFF',\n  color: '#bdbdbd',\n  outline: 'none',\n  transition: 'border .24s ease-in-out',\n  minHeight: '200px'\n};\n\nconst activeStyle = {\n  borderColor: '#2196f3'\n};\n\nconst acceptStyle = {\n  borderColor: '#00e676'\n};\n\nconst rejectStyle = {\n  borderColor: '#ff1744'\n};\n\nconst FormFile = ({ nextStep, previousStep }) => {\n  const {t}  = useTranslation();\n\n  const {\n    getRootProps,\n    getInputProps,\n    isDragActive,\n    isDragAccept,\n    isDragReject\n  } = useDropzone({accept: 'image/*'});\n\n  const style = useMemo(() => ({\n    ...baseStyle,\n    ...(isDragActive ? activeStyle : {}),\n    ...(isDragAccept ? acceptStyle : {}),\n    ...(isDragReject ? rejectStyle : {})\n  }), [\n    isDragActive,\n    isDragReject,\n    isDragAccept\n  ]);\n\n  return (\n    <div>\n      <h5>{t('form.fields.attachments')}</h5>\n      <div className=\"col-lg-12 mb-3\" {...getRootProps({style})}>\n        <input {...getInputProps()} />\n        <span>\n          {t('form.fields.attachmentsInfo')}<br />\n          {t('form.fields.attachmentsDrag')}\n        </span>\n      </div>\n      <div className=\"wizard-btn-row\">\n        <Button variant=\"link\" type=\"button\" onClick={previousStep}>\n          {t('wizard.previous')}\n        </Button>\n        <div className=\"wizard-btn-row\">\n          <Button variant=\"secondary\" type=\"button\" onClick={nextStep}>\n            {t('wizard.skip')}\n          </Button>\n          <Button variant=\"primary\" type=\"submit\" onClick={nextStep}>\n            {t('wizard.next')}\n          </Button>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default FormFile;\n","import React, {useState} from 'react';\nimport Form from \"react-bootstrap/Form\";\n\nimport {object, string, number} from 'yup';\n\nimport './InsuranceForm.scss';\n\nimport {Formik} from \"formik\";\nimport {useTranslation} from \"react-i18next\";\nimport StepWizard from \"react-step-wizard\";\nimport FormCar from \"./FormCar\";\nimport FormContact from \"./FormContact\";\nimport FormFile from \"./FormFile\";\n\nconst contactSchema = object({\n  lastName: string().required('validation.required'),\n  firstName: string().required('validation.required'),\n  birthDate: string().required('validation.required'),\n  postalCode: string().required('validation.required'),\n  contactType: string().required('validation.required')\n});\n\nconst carSchema = object({\n  carBrand: string().required('validation.required'),\n  carType: string().required('validation.required'),\n  carKilowatt: number().positive('validation.moreThanOrEqualsZero'),\n  carDriversLicenseDate: string(),\n  carHasOmnium: string(),\n  carAccidents: number().min(0, 'validation.moreThanOrEqualsZero').integer().required('validation.required')\n});\n\n\nconst FormBody = ({\n    errors,\n    touched,\n    handleChange,\n    handleBlur,\n    children,\n    previousStep,\n  isSubmitted,\n                    setIsSubmitting\n  }) => {\n\n  console.log(isSubmitted);\n\n  const validationProps = (name) => ({\n    onChange: handleChange,\n    onBlur: handleBlur,\n    isInvalid: (touched[name] || isSubmitted) && errors[name],\n    \"data-lpignore\": \"true\"\n  });\n  return React.cloneElement(children, { validationProps, errors, previousStep, setIsSubmitting });\n}\n\nconst FormWrapper = ({\n  validation,\n  nextStep,\n  previousStep,\n  onSubmit,\n  children\n}) => {\n  const [isSubmitted, setIsSubmitting] = useState(false);\n  console.log(isSubmitted);\n  return (\n    <Formik\n      onSubmit={(values) => {\n        onSubmit(values, nextStep);\n      }}\n      validationSchema={validation}\n      initialValues={{}}\n    >\n      {({\n          errors,\n          touched,\n          handleChange,\n          handleBlur,\n          handleSubmit\n        }) => (\n        <Form autoComplete=\"off\" onSubmit={(e) => {\n          e.preventDefault();\n          handleSubmit();\n        }}>\n          <FormBody errors={errors} touched={touched} setIsSubmitting={setIsSubmitting} isSubmitted={isSubmitted} handleBlur={handleBlur} handleChange={handleChange} previousStep={previousStep}>\n            {children}\n          </FormBody>\n        </Form>\n      )}\n    </Formik>\n  )\n};\n\nconst InsuranceForm = () => {\n  const [carData, setCarData] = useState();\n  const [contactData, setContactData] = useState();\n  const [fileData, setFileData] = useState();\n  return (\n    <div id=\"InsuranceForm\">\n      <StepWizard>\n        <FormWrapper validation={carSchema} onSubmit={(values, goToNextStep) => {\n          setCarData(values);\n          goToNextStep();\n        }}>\n          <FormCar stepName=\"car\" />\n        </FormWrapper>\n        <FormWrapper onSubmit={(values, goToNextStep) => {\n          setContactData(values);\n          goToNextStep();\n        }}>\n          <FormFile />\n        </FormWrapper>\n        <FormWrapper validation={contactSchema} onSubmit={(values, goToNextStep) => {}}>\n          <FormContact />\n        </FormWrapper>\n      </StepWizard>\n    </div>\n  )\n};\n\nexport default InsuranceForm;\n","import React from 'react';\nimport Section from \"../../components/Section\";\nimport Container from \"../../components/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/cjs/Col\";\nimport InsuranceForm from \"../form/InsuranceForm\";\n\nconst MainSection = ({ toAbout, reference }) => {\n  return (\n    <Section id=\"MainSection\" reference={reference}>\n      <Container>\n        <Row>\n          <Col lg=\"12\">\n            <h1>Autoverzekering onafhankelijk laten vergelijken</h1>\n            <h2>Onze deskundige verzekeraars bekijken uw situatie op maat en niet op basis van een simulatie.<br/>\n              Hierdoor kunnen wij\n              u vaker een scherper tarief aanbieden, maar ook de juiste keuze helpen maken.</h2>\n          </Col>\n        </Row>\n        {/*<Button onClick={() => toAbout()}>*/}\n        {/*  Vergelijken*/}\n        {/*</Button>*/}\n        {/*{' '}*/}\n        {/*<Button variant=\"light\">*/}\n        {/*  Nieuwe aanvraag*/}\n        {/*</Button>*/}\n        <InsuranceForm />\n      </Container>\n    </Section>\n  );\n}\n\nexport default MainSection;\n","import React from 'react';\nimport Section from \"../../components/Section\";\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\nimport Container from \"../../components/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/cjs/Col\";\nimport {faEuroSign, faLayerGroup, faChartLine} from \"@fortawesome/free-solid-svg-icons\";\n\nimport \"./AboutSection.scss\";\nimport {useTranslation} from \"react-i18next\";\n\nconst AboutSection = ({ reference }) => {\n  const {t} = useTranslation();\n  return (\n    <Section reference={reference}>\n      <Container>\n        <Row>\n          <Col lg=\"12\" className=\"mb-5\">\n            <h2>{t('about.title')}</h2>\n            <p>\n              {t('about.text1')}\n              {' '}\n               <a href={t('url')} target=\"_blank\">{t('url')}</a>\n            </p>\n          </Col>\n        </Row>\n        <Row id=\"Features\">\n          <Col lg=\"4\">\n            <div className=\"feature-icon feature-icon-euro\">\n              <FontAwesomeIcon icon={faEuroSign}/>\n            </div>\n            <h4>{t('about.feature1.title')}</h4>\n            <p>{t('about.feature1.text')}</p>\n          </Col>\n          <Col lg=\"4\">\n            <div className=\"feature-icon feature-icon-layer\">\n              <FontAwesomeIcon icon={faLayerGroup}/>\n            </div>\n            <h4>{t('about.feature2.title')}</h4>\n            <p>{t('about.feature2.text')}</p>\n          </Col>\n          <Col lg=\"4\">\n            <div className=\"feature-icon feature-icon-chart\">\n              <FontAwesomeIcon icon={faChartLine}/>\n            </div>\n            <h4>{t('about.feature3.title')}</h4>\n            <p>{t('about.feature3.text')}</p>\n          </Col>\n        </Row>\n      </Container>\n    </Section>\n  );\n}\n\nexport default AboutSection;\n","import React from 'react';\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/cjs/Button\";\nimport {Formik} from \"formik\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/cjs/Col\";\n\nimport { object, string } from 'yup';\nimport {useTranslation} from \"react-i18next\";\n\nconst schema = object({\n  name: string().required('validation.required'),\n  contact: string().required('validation.required'),\n  message: string().required('validation.required'),\n}).required();\n\nconst FormBody = ({\n                    errors,\n                    touched,\n                    handleChange,\n                    handleBlur\n                  }) => {\n  const validationProps = (name) => ({\n    onChange: handleChange,\n    onBlur: handleBlur,\n    isInvalid: touched[name] && errors[name]\n  });\n  const { t } = useTranslation();\n  return (\n    <>\n      <Row className=\"mb-3\">\n        <Form.Group as={Col} lg=\"6\" controlId=\"name\">\n          <Form.Label>{t('contact.name')} *</Form.Label>\n          <Form.Control type=\"text\" {...validationProps('name')} />\n          <Form.Control.Feedback type=\"invalid\">\n            {t(errors.name)}\n          </Form.Control.Feedback>\n        </Form.Group>\n        <Form.Group as={Col} lg=\"6\" controlId=\"contact\">\n          <Form.Label>{t('contact.contact')} *</Form.Label>\n          <Form.Control type=\"text\" {...validationProps('contact')} />\n          <Form.Control.Feedback type=\"invalid\">\n            {t(errors.contact)}\n          </Form.Control.Feedback>\n        </Form.Group>\n      </Row>\n      <Row className=\"mb-3\">\n        <Form.Group as={Col} lg=\"12\" controlId=\"message\">\n          <Form.Label>{t('contact.message')} *</Form.Label>\n          <Form.Control as=\"textarea\" rows={6} {...validationProps('message')} />\n          <Form.Control.Feedback type=\"invalid\">\n            {t(errors.message)}\n          </Form.Control.Feedback>\n        </Form.Group>\n      </Row>\n    </>\n  )\n}\n\nconst ContactForm = () => {\n  const { t } = useTranslation();\n  return (\n    <div id=\"ContactForm\">\n      <Formik onSubmit={(values, {setSubmitting, resetForm}) => {\n        // When button submits form and form is in the process of submitting, submit button is disabled\n        setSubmitting(true);\n\n        // Resets form after submission is complete\n        resetForm();\n\n        // Sets setSubmitting to false after form is reset\n        setSubmitting(false);\n      }} validationSchema={schema} initialValues={{\n        name: '',\n        contact: '',\n        message: ''\n      }}>\n        {({\n            errors,\n            touched,\n            handleChange,\n            handleBlur,\n            handleSubmit\n          }) => (\n          <Form onSubmit={(e) => {\n            e.preventDefault();\n            handleSubmit();\n          }}>\n            <FormBody errors={errors} touched={touched} handleBlur={handleBlur} handleChange={handleChange}/>\n            <Button variant=\"primary\" type=\"submit\">\n              {t('contact.submit')}\n            </Button>\n          </Form>\n        )}\n      </Formik>\n    </div>\n  );\n}\n\nexport default ContactForm;\n","import React from 'react';\nimport Section from \"../../components/Section\";\nimport Container from \"../../components/Container\";\nimport ContactForm from \"./ContactForm\";\nimport {useTranslation} from \"react-i18next\";\n\nimport \"./Contact.scss\";\n\nconst ContactSection = ({reference}) => {\n  const {t} = useTranslation();\n  return (\n    <Section id=\"ContactSection\" reference={reference}>\n      <Container>\n        <h2>{t('contact.title')}</h2>\n        <p>Verzekeringen zijn een complexe materie. Zonder gedegen kennis van zaken is het haast onmogelijk om een goede verzekerings-\n          oplossing op maat te vinden. Als specialist terzake, kunnen we u optimaal begeleiden in de zoektocht naar oplossingen in alle domeinen</p>\n        <ContactForm />\n      </Container>\n    </Section>\n  )\n} ;\n\nexport default ContactSection;\n","/* eslint-disable react/no-find-dom-node */\nimport ReactDOM from 'react-dom';\nimport isMicrosoftBrowser from './browser';\n\nconst SCROLL_TOP_WHITE_SPACE = 0;\nconst IS_IE = isMicrosoftBrowser();\n\nconst getRefDomBounding = (ref) => {\n  if (ref && ref.current) {\n    const node = ReactDOM.findDOMNode(ref.current);\n    return node && node.getBoundingClientRect ? node.getBoundingClientRect() : undefined;\n  }\n  return undefined;\n};\n\nconst scrollTo = (top, offset = 0) => {\n  if (top) {\n    if (IS_IE) {\n      window.scrollTo(0, window.pageYOffset + top - offset);\n    } else {\n      window.scrollTo({\n        top: window.pageYOffset + top - offset,\n        behavior: 'smooth'\n      });\n    }\n  }\n};\n\nconst scrollToRef = (ref, offset = 0) => {\n  if (ref) {\n    scrollTo(getRefDomBounding(ref).top, offset + SCROLL_TOP_WHITE_SPACE);\n  }\n};\n\nconst scrollToElement = (element, offset = 0) => {\n  if (element) {\n    const bounding = element.getBoundingClientRect();\n    scrollTo(bounding.top, offset + SCROLL_TOP_WHITE_SPACE);\n  }\n};\n\nexport { getRefDomBounding, scrollTo, scrollToElement, scrollToRef };\n","const isMicrosoftBrowser = () => {\n  const userAgentPatterns = ['MSIE ', 'Trident/', 'Edge/'];\n  return new RegExp(userAgentPatterns.join('|')).test(window.navigator.userAgent);\n};\n\nexport default isMicrosoftBrowser;\n","export default __webpack_public_path__ + \"static/media/logo_white.8878a289.svg\";","import i18n from 'i18next';\nimport LanguageDetector from 'i18next-browser-languagedetector';\nimport { initReactI18next } from 'react-i18next';\n\nconst nl = require('./nl-BE.json');\nconst fr = require('./fr-BE.json');\n\nconst changeLanguage = (language) => {\n  // Don't reset the same language\n  if (language === i18n.language) {\n    return;\n  }\n  // This also sets the localStorage right for LanguageDetector\n  i18n.changeLanguage(language).then(() => {\n    // No harm in logging the language into the browser console\n    // eslint-disable-next-line no-console\n    console.info(`Language changed to ${language}`);\n  });\n};\n\nconst languageDetectorOptions = {\n  // Querystring doesn't work well with react-router, so we don't use it\n  order: ['localStorage', 'navigator'],\n  lookupLocalStorage: 'HcLng', // We could align this key with other products\n  caches: ['localStorage']\n};\n\nconst setupAndInitI18n = (language) => {\n  const i18nOptions = {\n    fallbackLng: 'nl-BE',\n    supportedLngs: ['nl-BE', 'fr-BE'],\n    detection: languageDetectorOptions,\n    resources: {\n      'nl-BE': { translations: nl },\n      'fr-BE': { translations: fr }\n    },\n    // debug: true,\n    interpolation: {\n      escapeValue: false // Make sure to not escape characters by default (eg. DD//MM//YYYY, é&è)\n    },\n    // Have a common namespace used around the full app\n    ns: ['translations'],\n    defaultNS: 'translations',\n    nsSeparator: '|', // Makes sure that the default value : can't be used in a translation\n    react: {\n      wait: true,\n      withRef: true,\n      defaultTransParent: 'span'\n    }\n  };\n\n  // Only set lng option when wanting to init for dedicated language (otherwise it will language detected from LanguageDetector)\n  if (language) {\n    i18nOptions.lng = language;\n  }\n\n  i18n\n    .use(LanguageDetector) // Enables localStorage, browser language detection,\n    .use(initReactI18next)\n    .init(i18nOptions);\n};\n\nexport { changeLanguage };\nexport default setupAndInitI18n;\n","import NavDropdown from \"react-bootstrap/NavDropdown\";\nimport {changeLanguage} from \"../i18n/i18nSetup\";\nimport React from \"react\";\nimport {useTranslation} from \"react-i18next\";\n\nconst LanguageToggle = () => {\n  const { i18n } = useTranslation();\n  return (\n    <NavDropdown title={i18n.language === 'nl-BE' ? 'Nederlands': 'Français'} id=\"basic-nav-dropdown\">\n      <NavDropdown.Item onClick={() => changeLanguage('nl-BE')}>Nederlands</NavDropdown.Item>\n      <NavDropdown.Item onClick={() => changeLanguage('fr-BE')}>Français</NavDropdown.Item>\n    </NavDropdown>\n  )\n};\n\nexport default LanguageToggle;\n","import MainSection from \"./sections/main/MainSection\";\nimport AboutSection from \"./sections/about/AboutSection\";\nimport InsuranceForm from \"./sections/form/InsuranceForm\";\nimport ContactSection from \"./sections/contact/ContactSection\";\nimport React, {useEffect, useRef, useState} from \"react\";\nimport {scrollToRef} from \"./utils/window\";\nimport Button from \"react-bootstrap/Button\";\nimport Logo from \"./images/logo_white.svg\";\nimport Navbar from \"react-bootstrap/Navbar\";\nimport Container from \"react-bootstrap/Container\";\nimport Nav from \"react-bootstrap/Nav\";\nimport {useTranslation} from \"react-i18next\";\n\nimport setupAndInitI18n from \"./i18n/i18nSetup\";\nimport LanguageToggle from \"./components/LanguageToggle\";\n\nsetupAndInitI18n();\n\nfunction App() {\n\n  const refMain = useRef();\n  const refAbout = useRef();\n  const refForm = useRef();\n  const refContact = useRef();\n  const { t } = useTranslation();\n  const [header, setHeader] = useState(\"\")\n\n  const listenScrollEvent = (event) => {\n    if (window.scrollY < 150) {\n      return setHeader(\"\")\n    } else if (window.scrollY > 140) {\n      return setHeader(\"header-moved\")\n    }\n  }\n\n  useEffect(() => {\n    window.addEventListener('scroll', listenScrollEvent);\n\n    return () =>\n      window.removeEventListener('scroll', listenScrollEvent);\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <Navbar className={`main-nav ${header}`} expand=\"lg\" fixed=\"top\">\n        <Container>\n          <Navbar.Brand href=\"#home\" onClick={() => scrollToRef(refMain)}>\n            <img src={Logo} id=\"MainLogo\" alt=\"Logo Financieel Adviesburo\" />\n          </Navbar.Brand>\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n          <Navbar.Collapse id=\"basic-navbar-nav\">\n            <Nav className=\"me-auto\">\n            </Nav>\n            <Nav>\n              <Nav.Link onClick={() => scrollToRef(refAbout)}>{t('about.nav')}</Nav.Link>\n              <Nav.Link onClick={() => scrollToRef(refContact)}>{t('contact.nav')}</Nav.Link>\n              <LanguageToggle />\n              <Nav.Link as={Button} variant=\"outline-light\" onClick={() => scrollToRef(refForm)}>{t('form.nav')}</Nav.Link>\n            </Nav>\n          </Navbar.Collapse>\n        </Container>\n      </Navbar>\n      <MainSection reference={refMain} toAbout={() => scrollToRef(refAbout)} />\n      <AboutSection reference={refAbout} />\n      <ContactSection reference={refContact} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}